#ifndef PROTOCOL_H
#define PROTOCOL_H
typedef unsigned int uint;
enum ENUM_MSG_TYPE{//消息类型枚举
    ENUM_MSG_TYPE_MIN=0,//消息的最小大小
    ENUM_MSG_TYPE_REGIST_REQUEST,//登录请求信息
    ENUM_MSG_TYPE_REGIST_RESPOND,//响应消息
    ENUM_MSG_TYPE_LOGIN_REQUEST,//注册请求信息
    ENUM_MSG_TYPE_LOGIN_RESPOND,//响应消息
    ENUM_MSG_TYPE_FIND_REQUEST,
    ENUM_MSG_TYPE_FIND_RESPOND,
    ENUM_MSG_TYPE_ONLINE_USER_REQUEST,
    ENUM_MSG_TYPE_ONLINE_USER_RESPOND,
    ENUM_MSG_TYPE_ADD_FRIEND_REQUEST,//car发送给服务器添加请求
    ENUM_MSG_TYPE_ADD_FRIEND_RESPOND,//服务器给car的响应请求
    ENUM_MSG_TYPE_ADD_FRIEND_AGREE_REQUEST,//tar给服务器发送同意添加请求
    ENUM_MSG_TYPE_ADD_FRIEND_AGREE_RESPOND,//服务器给tar的响应请求
    ENUM_MSG_TYPE_FLUSH_FRIEND_REQUEST,
    ENUM_MSG_TYPE_FLUSH_FRIENDD_RESPOND,
    ENUM_MSG_TYPE_DEL_FRIEND_REQUEST,
    ENUM_MSG_TYPE_DEL_FRIEND_RESPOND,
    ENUM_MSG_TYPE_CHAT_REQUEST,
    ENUM_MSG_TYPE_CHAT_RESPOND,
    ENUM_MSG_TYPE_MKDIR_REQUEST,
    ENUM_MSG_TYPE_MKDIR_RESPOND,
    ENUM_MSG_TYPE_FLUSH_FILE_REQUEST,
    ENUM_MSG_TYPE_FLUSH_FILE_RESPOND,
    ENUM_MSG_TYPE_MOVE_FILE_REQUEST,
    ENUM_MSG_TYPE_MOVE_FILE_RESPOND,
    ENUM_MSG_TYPE_UPLOAD_FILE_REQUEST,
    ENUM_MSG_TYPE_UPLOAD_FILE_RESPOND,
    ENUM_MSG_TYPE_UPLOAD_FILE_DATA_REQUEST,
    ENUM_MSG_TYPE_UPLOAD_FILE_DATA_RESPOND,
    ENUM_MSG_TYPE_MAX=0x00ffffff,//消息的最大大小

};
struct PDU{//协议数据单元结构体
    uint uiPDULen;//协议总长度
    uint uiMsgLen;//柔性数组：实际的消息长度，不占用结构体大小
    uint uiType;//消息类型
    char caData[64];//参数
    char caMsg[];//实际消息
};
struct FileInfo {
    char caName[32];
    int iType;
};

PDU* mkPDU(uint uiMsgLen=0);//为了申请地址
#endif // PROTOCOL_H
